name: Promote BETA to Pre-release (rename assets)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Základní verze (např. 1.3.0)'
        required: true
      rc_suffix:
        description: 'Suffix pro soubory (např. -rc1), prázdné = nepřejmenovávat'
        required: false
        default: '-rc1'

jobs:
  promote:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ github.token }}
      VERSION: ${{ github.event.inputs.version }}
      RC_SUFFIX: ${{ github.event.inputs.rc_suffix }}

    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get beta release JSON
        id: getrel
        run: |
          set -e
          RJSON=$(gh api repos/${GITHUB_REPOSITORY}/releases/tags/v${VERSION}-beta)
          echo "$RJSON" > rel.json
          RID=$(jq -r '.id' rel.json)
          echo "rid=$RID" >> $GITHUB_OUTPUT

      - name: Mark as prerelease and publish
        run: |
          gh api -X PATCH repos/${GITHUB_REPOSITORY}/releases/${{ steps.getrel.outputs.rid }} \
            -f draft=false -f prerelease=true \
            -f name="Firmware v${VERSION}${RC_SUFFIX:+ ${RC_SUFFIX#-} } (pre-release)"

      - name: Optionally rename assets (add suffix)
        if: ${{ env.RC_SUFFIX != '' }}
        run: |
          set -e
          ASSETS=$(jq -c '.assets[] | {id: .id, name: .name}' rel.json)
          while read -r A; do
            AID=$(echo "$A" | jq -r '.id')
            ANAME=$(echo "$A" | jq -r '.name')
            if [[ "$ANAME" == *.bin || "$ANAME" == *.sha256 ]]; then
              BASE="${ANAME%.*}"
              EXT="${ANAME##*.}"
              if [[ "$BASE" == *"-v${VERSION}" ]]; then
                NEW="${BASE}${RC_SUFFIX}.${EXT}"
                echo "Renaming $ANAME -> $NEW"
                gh api -X PATCH repos/${GITHUB_REPOSITORY}/releases/assets/${AID} -f name="$NEW" >/dev/null
              fi
            fi
          done <<< "$ASSETS"
